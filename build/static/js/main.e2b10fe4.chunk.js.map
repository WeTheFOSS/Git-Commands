{"version":3,"sources":["Components/Header.jsx","Components/Card/card.jsx","Components/Card/GitDescription.jsx","Components/Credits.jsx","Components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","rel","React","Component","git","cli","usage","description","id","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","searchHandler","bind","assertThisInitialized","event","setState","target","value","_this$state","type","name","placeholder","autoComplete","autoCorrect","autoCapitalize","spellCheck","onChange","reactstrap_es","filter","x","toLowerCase","includes","searchingFor","map","github","key","sm","md","lg","GitDescription","card","people","url","image","twitter","email","Credits","person","src","alt","Footer","Git","Components_Header","Card_GitDescription","src_Components_Credits","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2b10fe4.chunk.js","sourcesContent":["import React from 'react'\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div>\n        {}\n        <div className=\"header-title\">\n          <h1>\n            <a href=\"https://wethefoss.github.io/Git-Commands/\" rel=\"noopener noreferrer\">\n              GIT COMMANDS\n            </a>\n          </h1>\n        </div>\n        <div className=\"subtitle\">\n          <p>\n            LEARN GIT IN AN INTERACTIVE WAY\n          </p>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport {Col, Row} from 'reactstrap';\n\nconst git = [\n  {\n    cli: \"git version\",\n    usage: \"git --version\",\n    description: \"This command is used to check the git version.\",\n    id: '1'\n  }, {\n    cli: \"git config --global user.name\",\n    usage: \"git config --global user.name \\\"Harsh Trivedi\\\"\",\n    description: \"This command is used define the username of the git user globally.\",\n    id: '2'\n  }, {\n    cli: \"git config --global user.email\",\n    usage: \"git config --global user.email user@email.com\",\n    description: \"This command is used define the email of the git user globally.\",\n    id: '3'\n  }, {\n    cli: \"git init\",\n    usage: \"git init\",\n    description: \"This command is used to initialize a directory.\",\n    id: '4'\n  }, {\n    cli: \"git clone\",\n    usage: \"git clone [/path/to/repository]\",\n    description: \"This command is used to initialize a directory.\",\n    id: '5'\n  }, {\n    cli: \"git status\",\n    usage: \"git status\",\n    description: \"This command is used to check status.\",\n    id: '6'\n  }, {\n    cli: \"git add\",\n    usage: \"git add *\",\n      description: \"Add files to staging(index)\",\n    id: '7'\n  }, {\n    cli: \"git add\",\n    usage: \"git add [file-name.jsx]\",\n    description: \"Add a file to the staging area.\",\n    id: '8'\n  }, {\n    cli: \"git add -A\",\n    usage: \"git add -A\",\n    description: \"Add all new and changed files to the staging area.\",\n    id: '9'\n  }, {\n    cli: \"git commit -m\",\n    usage: \"git commit -m [commit message]\",\n    description: \"Commit changes to you repository with a message.\",\n    id: '10'\n  }, {\n    cli: \"git rm -r\",\n    usage: \"git rm -r [file-name.jsx]\",\n    description: \"Remove a file (or folder) from your repository.\",\n    id: '11'\n  }, {\n    cli: \"git pull origin\",\n    usage: \"git pull origin [branch-name]\",\n    description: \"To pull a specific branch from github repository.\",\n    id: '12'\n  }, {\n    cli: \"git push origin\",\n    usage: \"git push origin [branch-name]\",\n    description: \"To push a specific branch from github repository.\",\n    id: '13'\n  }, {\n    cli: \"git checkout -b\",\n    usage: \"git checkout -b [branchname]\",\n    description: \"Create a new branch and switch to it.\",\n    id: '14'\n  }, {\n    cli: \"git checkout\",\n    usage: \"git checkout\",\n    description: \"Switch from one branch to another.\",\n    id: '15'\n  }, {\n    cli: \"git branch\",\n    usage: \"git branch\",\n    description: \"This command lists all the branches in the repo and also tells the current branch.\",\n    id: '16'\n  }, {\n    cli: \"git branch -d\",\n    usage: \"git branch -d [branchname]\",\n    description: \"This commands deleted the branch\",\n    id: '17'\n  }, {\n    cli: \"git push all\",\n    usage: \"git push --all origin\",\n    description: \"Pushes all branches to the remote repository\",\n    id: '18'\n  }, {\n    cli: \"git merge\",\n    usage: \"git merge [branchname]\",\n    description: \"This command merges different branch into the active branch.\",\n    id: '19'\n  }, {\n    cli: \"git diff\",\n    usage: \"git diff\",\n    description: \"This command shows all the merge conflicts\",\n    id: '20'\n  }, {\n    cli: \"git diff filename\",\n    usage: \"git diff --base [filename]\",\n    description: \"This command shows all the merge conflicts against the base file.\",\n    id: '21'\n  }, {\n    cli: \"git diff filename\",\n    usage: \"git diff [source branch] [target branch]\",\n    description: \"This command shows preview before merging.\",\n    id: '22'\n  }, {\n    cli: \"git tag\",\n    usage: \"git tag 1.0.0 [commit ID]\",\n    description: \"This command marks a significant change-set, such as a release.\",\n    id: '23'\n  }, {\n    cli: \"git log\",\n    usage: \"git log\",\n    description: \"This command shows the commit logs[history]\",\n    id: '24'\n  }, {\n    cli: \"git fetch\",\n    usage: \"git fetch origin\",\n    description: \"This command fetch all the latest commits and thus, you don't have to drop all the local changes.\",\n    id: '25'\n  },\n]\n\nfunction searchingFor(term) {\n  return function(x) {\n    return x.cli.toLowerCase().includes(term.toLowerCase()) || !term;\n  }\n}\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      git: git,\n      term: ''\n    }\n\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  searchHandler(event) {\n    this.setState({term: event.target.value})\n  }\n\n  render() {\n    const {term, git} = this.state;\n    return (\n      <div>\n        <form>\n          <input type=\"text\" name=\"Search\" id=\"search\" placeholder=\"TYPE GIT COMMANDS HERE\" autoComplete=\"off\" autoCorrect=\"off\" autoCapitalize=\"off\" spellCheck=\"false\" onChange={this.searchHandler} value={term}/>\n        </form>\n      <Row>\n      {\n        git.filter(searchingFor(term)).map(github => <Col key={github.id} className=\"card\" sm=\"12\" md=\"6\" lg=\"4\">\n          <div className=\"card-body\">\n            <p className=\"Clickbutton\">{github.cli}</p>\n            <code>{github.usage}</code>\n            <p className=\"card-text\">{github.description}</p>\n          </div>\n        </Col>)\n      }\n    </Row>\n  </div>\n  );\n  }\n}\n\nexport default Search;\n","import React, {Component} from 'react';\nimport Search from './card';\n\nclass GitDescription extends Component {\n  render() {\n    return (<div>\n      <div className=\"git-card\">\n        <Search/>\n      </div>\n    </div>);\n  }\n}\n\nexport default GitDescription;\n","import React, {Component} from 'react';\nimport {Col, Row, Container} from 'reactstrap';\n\n// style\nimport './Credits.scss';\n\nconst people = [\n  {\n    name: \"Naveen Kharwar\",\n    url: \"https://naveenkharwar.com\",\n    description: \"A freelance React Developer, Web/WordPress developer and a geek.\",\n    image:  \"https://github.com/naveenkharwar.png\",\n    twitter: \"https://www.twitter.com/naveenkharwar0\",\n    github: \"https://github.com/naveenkharwar\",\n    email: \"naveen9198@gmail.com\",\n    id: '1'\n  },\n  {\n    name: \"Sneha Omer\",\n    url: \"https://twitter.com/sassyecoder\",\n    description: \"A tiny nerd with a curious brain and a will to turn information into action.\",\n    image: \"https://github.com/sassyecoder.png\",\n    twitter: \"https://www.twitter.com/sassyecoder\",\n    github: \"https://github.com/sassyecoder\",\n    email: \"omersneha@gmail.com\",\n    id: '2'\n  },\n  {\n    name: \"Harsh Trivedi\",\n    url: \"https://harsh98trivedi.github.io\",\n    description: \"A Tech Lover, Inspired by Imagination, Jack of all trades, master of none.\",\n    image: \"https://github.com/harsh98trivedi.png\",\n    twitter: \"https://twitter.com/harsh98trivedi\",\n    github: \"https://www.github.com/harsh98trivedi\",\n    email: \"harshtrivedi@duck.com\",\n    id: '3'\n  },\n]\n\nclass Credits extends Component{\n  render() {\n    return (\n      <div >\n        <h5 className=\"credits\">CREDITS FOR THIS PROJECT</h5>\n        <Container>\n        <Row>\n        {\n          people.map( person =>\n              <Col key={person.id} sm=\"12\" md=\"6\" lg=\"4\" id=\"image\" className=\"text-center\">\n                <a href={person.url}><img className=\"img\" src={person.image} alt=\"Git Commands\" /></a>\n                <hr />\n                <h3>{person.name}</h3>\n                 <p>{person.description}</p>\n                   <p>\n                       <a target=\"_blank\" rel=\"noopener noreferrer\" href={person.twitter}><i className=\"icons fab fa-twitter\"></i></a>\n                       <a target=\"_blank\" rel=\"noopener noreferrer\" href={person.github}><i className=\"icons fab fa-github\"></i></a>\n                       <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"mailto:\" + person.email}><i className=\"icons fas fa-envelope\"></i></a>\n                   </p>\n                   <hr />\n              </Col>\n          )\n        }\n      </Row>\n    </Container>\n      </div>\n    );\n  }\n}\n\nexport default Credits;\n","import React, {Component} from 'react';\n\n// stylesheet\nimport './footer.scss';\n\nclass Footer extends Component {\n  render() {\n    return (<div>\n      <footer>\n        <h5>A PROJECT BY 3 NERDS</h5>\n        <a href=\"https://twitter.com/WeTheFOSS\">\n          <i className=\"fab fa-twitter\"></i>\n        </a>\n        <a href=\"https://www.instagram.com/WeTheFOSS\">\n          <i className=\"fab fa-instagram\"></i>\n        </a>\n        <a href=\"https://github.com/wethefoss\">\n          <i className=\"fab fa-github\"></i>\n        </a>\n        <hr/>\n        <a id=\"src-git\" href=\"https://github.com/WeTheFOSS/Git-Commands\"  target=\"_blank\"  rel=\"noopener noreferrer\">STARGRAZE US ON <b>GITHUB</b></a>\n      </footer>\n    </div>);\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './style.scss';\n\n// Component import\nimport Header from './Components/Header';\nimport GitDescription from './Components/Card/GitDescription';\nimport Credits from './Components/Credits';\nimport Footer from './Components/Footer';\n\nclass Git extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <Header />\n        <GitDescription />\n        <Credits />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Git;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\n// Boostrap\nimport 'bootstrap/dist/css/bootstrap.css';\n// Normalize\nimport 'normalize.css'; // Note this\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}